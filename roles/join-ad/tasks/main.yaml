---
- name: Add Global ENV
  lineinfile:
      state: present
      dest: '/etc/environment'
      regexp: '^{{ item.search }}'
      line: '{{ item.replace }}'
  with_items:
     - { search: 'LC_ALL=', replace: 'export LC_ALL=en_US.utf-8' }
     - { search: 'LANG=', replace: 'export LANG=en_US.utf-8' }
     - { search: 'LANGUAGE=', replace: 'export LANGUAGE=en_US.utf-8' }

- name: Checking Default JAVA HOME 
  shell: dirname  $( readlink -f /etc/alternatives/java )  | sed 's/bin//g'
  register: java_path

- debug: msg={{ java_path }}

- name: Downloading JAVA JCE 
  get_url: 
     url: "{{ java_8_jce_url }}"
     dest: /tmp/jce.zip
     headers: "Cookie: oraclelicense=accept-securebackup-cookie"

- name: Installing JCE
  unarchive:
      src: /tmp/jce.zip
      dest: "{{ java_path.stdout }}/lib/security/"
      remote_src: yes

- name: Installing Requere packages
  yum: 
    name: "{{ item }}"
    state: installed
  with_items: "{{ pkgs }}"

- name: Updating resolv.conf 
  template: src=resolv.conf.j2 dest=/etc/resolv.conf

- name: Sync time with AD
  shell: systemctl stop ntpd ; ntpdate {{ ad_server.ip }} && systemctl start ntpd

- name: install pexpect using pip
  shell: /bin/bash -c "pip install pexpect"

- name: Checking Domain Join status
  shell: /bin/bash -c "/usr/sbin/realm discover {{ ad_server.fqdn }} | grep -q sssd"
  register: ad_status
  ignore_errors: true

- name: Join linux into domain
  expect:
      command: /bin/bash -c "/usr/sbin/realm join {{ ad_server.fqdn }} --user={{ ad_server.user }}"
      responses:
          Password.*: "{{ ad_server.pass }}"
  when: ad_status.rc != 0

- name: Configure SSSD 
  template: src=sssd.conf.j2 dest=/etc/sssd/sssd.conf
  notify: 
    - restart sssd

- name: Configure krb5.conf
  template: src=krb5.conf.j2 dest=/etc/krb5.conf

- name: Allow Password Auth for all users except root
  lineinfile: 
     backup: yes
     state: present
     dest: /etc/ssh/sshd_config
     regexp: '^{{ item.search }}'
     line: '{{ item.replace }}'
  with_items:
      - { search: 'PermitRootLogin', replace: 'PermitRootLogin no' }
      - { search: 'PasswordAuthentication', replace: 'PasswordAuthentication yes' }
      - { search: 'GSSAPIAuthentication', replace: 'GSSAPIAuthentication yes' }
  notify:
      - restart sshd

- name: Updating sudors for Domain Admins users
  lineinfile: 
     path: /etc/sudoers
     state: present
     regexp: '^%domain\\ admins'
     line: '%domain\ admins ALL=(ALL:ALL) ALL'
     validate: 'visudo -cf %s'
